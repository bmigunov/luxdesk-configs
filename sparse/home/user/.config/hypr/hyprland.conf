# Refer to the wiki for more information.
# https://wiki.hyprland.org/Configuring/Configuring-Hyprland/

# You can split this configuration into multiple files
# Create your files separately and then link them to this file like this:
# source = ~/.config/hypr/myColors.conf




# Variables
$terminal = kitty
$drun = tofi-drun | xargs hyprctl dispatch exec --
$run = tofi-run | xargs hyprctl dispatch exec --

# Wayland-specific environment variables
env = XCURSOR_SIZE,24
env = HYPRCURSOR_SIZE,24
env = _JAVA_AWT_WM_NONREPARENTING,1
env = MOZ_ENABLE_WAYLAND,1
env = GDK_BACKEND,wayland,x11,*
env = QT_QPA_PLATFORM,wayland;xcb
env = CLUTTER_BACKEND,wayland
env = WINEPREFIX,$HOME/.local/share/wine
env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland

# Keywords
    # Executing
        # 'exec-once = command' will execute only on launch
        # 'exec = command' will execute on each reload
        # 'exec-shutdown = command' will execute only on shutdown
    # Blurring layerSurfaces
        # 'layerrule = blur, NAMESPACE' or 'layerrule = blur,
        # address:0x<ADDRESS>' will blur layer surfaces such as wallpapers,
        # notification overlays, bars etc.
        # 'layerrule = unset, NAMESPACE/address:0x<ADDRESS>' will remove a layer
        # rule
        # 'hyprctl layers' command will get the namespace/address

# Autostart
exec-once = systemctl --user start hyprpolkitagent
exec-once = hypridle
exec-once = waybar
exec-once = swww-daemon & swww img ~/Pictures/GIF/74.gif
exec-once = wayneko --follow-pointer true --layer bottom --type neko --sleepiness 2
exec-once = [workspace 1 silent] firefox-devedition
exec-once = [workspace 2 silent] obsidian
exec-once = [workspace 2 silent] $terminal
exec-once = [workspace 9 silent] thunderbird
exec-once = [workspace 9 silent] telegram
exec-once = [workspace 9 silent] discord
exec-once = [workspace 3 silent] steam
exec-once = [workspace 4 silent] $terminal
exec-once = [workspace 10 silent] keepassxc

# Settings
general {
# Size of the border around windows
    border_size = 2

# Disable borders for floating windows
    no_border_on_floating = false

# Gaps between windows, also supports CSS-style gaps (top, right, bottom,
# left -> 5,10,15,20)
    gaps_in = 4

# Gaps between windows and monitor edges, also supports CSS-style gaps (top,
# right, bottom, left -> 5,10,15,20)
    gaps_out = 8,8,30,8

# Gaps between workspaces. Stacks with 'gaps_out'
    gaps_workspaces = 0

# Border color for inactive window
    col.inactive_border = 0xff444444

# Border color for the active window
    col.active_border = rgba(228483ff) rgba(80199aff) 45deg

# Active border color for window that cannot be added to a group (see
# 'denywindowfromgroup' dispatcher)
    col.nogroup_border_active = 0xffff00ff

# Which layout to use ('dwindle'/'master')
    layout = dwindle

# If 'true', will not fall back to the next available window when moving focus
# in a direction where no window was found
    no_focus_fallback = false

# Enables resizing windows by clicking and dragging on borders and gaps
    resize_on_border = true

# Extends the area around the border where you can click and drag on, only used
# when 'general:resize_on_border' is on
    extend_border_grab_area = 15

# Show a cursor icon when hovering over borders, only used when
# 'general:resize_on_border' is on
    hover_icon_on_border = true

# Master switch for allowing tearing to occur
    allow_tearing = false

# Force floating windows to use a specific corner when being resized (1-4 going
# clockwise from top left, '0' to disable
    resize_corner = 0
}

decoration {
# Rounded corners' radius (in layout px)
    rounding = 12

# Opacity of active windows ('0.0-'1.0')
    active_opacity = 1.0

# Opacity of inactive windows ('0.0'-'1.0')
    inactive_opacity = 1.0

# Opacity of fullscreen windows ('0.0'-'1.0')
    fullscreen_opacity = 1.0

# Enables dimming of inactive windows
    dim_inactive = false

# How much inactive windows should be dimmed ('0.0'-'1.0')
    dim_strength = 0.5

# How much to dim the rest of the screen by when a special workspace is open
# ('0.0'-'1.0')
    dim_special = 0.2

# How much the 'dimaround' window rule should dim by ('0.0'-'1.0')
    dim_around = 0.4

# A path to a custom shader to be applied at the end of rendering
#    screen_shader =

    blur {
# Enable kawase window background blur
        enabled = true

# Blur size (distance)
        size = 8

# The amount of passes to perform
        passes = 1

# Make the blur layer ignore the opacity of the window
        ignore_opacity = false

# Whether to enable further optimizations to the blur. Recommended to leave on,
# as it will massively improve performance
        new_optimizations = true

# If enabled, floating windows will ignore tiled windows in their blur. Only
# available if 'new_optimizations' is 'true'. Will reduce overhead on floating
# blur significantly.
        xray = false

# How much noise to apply ('0.0'-'1.0')
        noise = 0.0117

# Contrast modulation for blur ('0.0'-'2.0')
        contrast = 0.8916

# Brightness modulation for blur ('0.0'-'2.0')
        brightness = 0.8172

# Increase saturation of blurred colors ('0.0'-'1.0')
        vibrancy = 0.1696

# How strong the effect of 'vibrancy' is on dark areas ('0.0'-'1.0')
        vibrancy_darkness = 0.0

# Whether to blur behind the special workspace (expensive)
        special = false

# Whether to blur popups
        popups = false

# Works like 'ignorealpha' in layer rules. If pixel opacity is below set value,
# will not blur ('0.0'-'1.0')
        popups_ignorealpha = 0.2
    }
}

animations {
# Enable animations
    enabled = true

# Enable first launch animation
    first_launch_animation = true

    bezier = overshot, 0.05, 0.9, 0.1, 1.1

    bezier = easeInSine, 0.12, 0, 0.39, 0
    bezier = easeOutSine, 0.61, 1, 0.88, 1
    bezier = easeInOutSine, 0.37, 0, 0.63, 1
    bezier = easeInQuad, 0.11, 0, 0.5, 0
    bezier = easeOutQuad, 0.5, 1, 0.89, 1
    bezier = easeInOutQuad, 0.45, 0, 0.55, 1
    bezier = easeInCubic, 0.32, 0, 0.67, 0
    bezier = easeOutCubic, 0.33, 1, 0.68, 1
    bezier = easeInOutCubic, 0.65, 0, 0.35, 1
    bezier = easeInQuart, 0.5, 0, 0.75, 0
    bezier = easeOutQuart, 0.25, 1, 0.5, 1
    bezier = easeInOutQuart, 0.76, 0, 0.24, 1
    bezier = easeInQuint, 0.64, 0, 0.78, 0
    bezier = easeOutQuint, 0.22, 1, 0.36, 1
    bezier = easeInOutQuint, 0.83, 0, 0.17, 1
    bezier = easeInExpo, 0.7, 0, 0.84, 0
    bezier = easeOutExpo, 0.16, 1, 0.3, 1
    bezier = easeInOutExpo, 0.87, 0, 0.13, 1
    bezier = easeInCirc, 0.55, 0, 1, 0.45
    bezier = easeOutCirc, 0, 0.55, 0.45, 1
    bezier = easeInOutCirc, 0.85, 0, 0.15, 1
    bezier = easeInBack, 0.36, 0, 0.66, -0.56
    bezier = easeOutBack, 0.34, 1.56, 0.64, 1
    bezier = easeInOutBack, 0.68, -0.6, 0.32, 1.6
}

input {
# Appropriate XKB keymap parameters
#    kb_model =

# Appropriate XKB keymap parameter
    kb_layout = us, ru

# Appropriate XKB keymap parameter
#    kb_variant =

# Appropriate XKB keymap parameter
    kb_options = grp:alt_shift_toggle

# Appropriate XKB keymap parameter
#    kb_rules =

# Appropriate XKB keymap parameter
#    kb_file =

# Engage NumLock by default
    numlock_by_default = true

# Determines how keybinds act when multiple layouts are used. If 'false',
# keybinds will always act as if the first specified layout is active. If
# 'true', keybinds specified by symbols are activated when you type the
# respective symbol with the current layout
    resolve_binds_by_sym = false

# The repeat rate for held-down keys, in repeats per second
    repeat_rate = 25

# Delay before a held-down key is repeated, in ms
    repeat_delay = 600

# Sets the mouse sensitivity. Value is clamped to the range '-1.0' to '1.0'
    sensitivity = 0.0

# Sets the cursor acceleration profile. Can be one of 'adaptive', 'flat'. Can
# also be 'custom'. Leave empty to use 'libinput''s default mode for your input
# device
#    accel_profile =

# Force no cursor acceleration. This bypasses most of your pointer settings to
# get as raw of a signal as possible. Enabling this is not recommended due to
# potential cursor desync
    force_no_accel = false

# Switches RMB and LMB
    left_handed = false

# Sets the scroll acceleration profile, when 'accel_profile' is set to 'custom'.
# Has to be in the form '<step> <points>'. Leave empty to have a flat scroll
# curve
#    scroll_points =

# Sets the scroll method. Can be one of '2fg' (2 fingers), 'edge',
# 'on_button_down', 'no_scroll'
#    scroll_method =

# Sets the scroll button. Has to be an 'int', cannot be a string. Check 'wev' if
# you have any doubts regarding the ID. '0' means default
    scroll_button = 0

# If the scroll button lock is enabled, the button does not need to be held
# down. Pressing and releasing the button toggles the button lock, which
# logically holds the button down or releases it. While the button is logically
# held down, motion events are converted to scroll events
    scroll_button_lock = false

# Multiplier added to scroll movement for external mice. Note that there is a
# separate setting for touchpad
    scroll_factor = 1.0

# Inverts scrolling direction. When enabled, scrolling moves content directly,
# rather than manipulating a scrollbar
    natural_scroll = false

# Specify if and how cursor movement should affect window focus ('0'/'1'/'2'/
# '3')
    follow_mouse = 0

# If disabled, mouse focus won't switch to the hovered window unless the mouse
# crosses a window boundary when 'follow_mouse = 1'
    mouse_refocus = true

# If enabled ('1' or '2'), focus will change to the window under the cursor when
# changing from tiled-to-floating and vice versa. If '2', focus will also follow
# mouse on float-to-float switches
    float_switch_override_focus = 1

# If enabled, having only floating windows in the special workspace will not
# block focusing windows in the regular workspace
    special_fallthrough = false

# Handles axis events around (gaps/border for tiled, dragarea/border for
# floated) a focused window. '0' ignores axis events, '1' sends out-of-bound
# coordinates, '2' fakes pointer coordinates to the closest point inside the
# window, '3' warps the cursor to the closest point inside the window
    off_window_axis_events = 1

    tablet {
# Transform the input from tablets. The possible transformations are the same as
# those of the monitors
        transform = 0

# The monitor to bind tablets. Empty means unbound
#        output =

# Position of the mapped region in monitor layout
        region_position = 0, 0

# Size of the mapped region. When this value is set, tablet input will be mapped
# to the region. '0, 0' or invalid size means unset
        region_size = 0, 0

# Whether the input should be relative
        relative_input = false

# If enabled, the tablet will be rotated 180 degrees
        left_handed = false

# Size of tablet's active area in mm
        active_area_size = 0, 0

# Position of the active area in mm
        active_area_position = 0, 0
    }
}

group {
# Whether new windows in a group spawn after current or at group tail
    insert_after_current = true

# Whether Hyprland should focus on the window that has just been moved out of
# the group
    focus_removed_window = true

# Active group border color
    col.border_active = rgba(6d2a61ff) rgba(fb7f9bff) 45deg

# Inactive (out of focus) group border color
    col.border_inactive = 0xff444444

# Active locked group border color
    col.border_locked_active = 0x6d2a61ff

# Inactive locked group border color
    col.border_locked_inactive = 0xff444400

    groupbar {
# Enables groupbars
        enabled = true

# Font used to display groupbar titles, uses 'misc:font_family' if not specified
#        font_family =

# Font size of groupbar title
        font_size = 8

# Enables gradients
        gradients = true

# Height of the groupbar
        height = 14

# Render the groupbar as a vertical stack
        stacked = false

# Sets the decoration priority for groupbars
        priority = 3

# Whether to render titles in the group bar decoration
        render_titles = true

# Whether scrolling in the groupbar changes group active window
        scrolling = true

# Controls the group bar text color
        text_color = 0xffffffff

# Active group color
        col.active = rgba(6d2a61cc) rgba(fb7f9bcc)

# Incative (out of focus) group color
        col.inactive = rgba(228483aa) rgba(2cacaaaa)

# Active locked group color
        col.locked_active = 0x6d2a6100

# Inactive locked group color
        col.locked_inactive = 0xff444400
    }
}

misc {
# Disables the random Hyprland logo background
    disable_hyprland_logo = false

# Disables the Hyprland splash rendering
    disable_splash_rendering = false

# Changes the color of the splash text
    col.splash = 0xffffffff

# Set the global default font to render the text including debug fps/
# notification, config error messages etc., selected from system fonts
    font_family = JetBrainsMono Nerd Font

# Changes the font used to render the splash text, selected from system fonts
#    splash_font_family =

# Enforce any of the 3 default wallpapers. Setting this to '0' or '1' disables
# the anime background. '-1' means "random" ('-1'/'0'/'1'/'2')
    force_default_wallpaper = -1

# Controls the VFR status of Hyprland. Heavily recommended to leave enabled to
# conserve resources
    vfr = true

# Controls the VRR (Adaptive Sync) of your monitors. '0' - off, '1' - on, '2' -
# fullscreen only ('0'/'1'/'2')
    vrr = 0

# If DPMS is set to off, wake up monitors if the mouse moves
    mouse_move_enables_dpms = false

# If DPMS is set to off, wake up the monitors if a key is pressed
    key_press_enables_dpms = false

# Will make mouse focus follow the mouse when drag and dropping. Recommended to
# leave it enabled, especially for people using focus follows mouse at '0'
    always_follow_on_dnd = true

# If 'true', will make keyboard-interactive layers keep their focus on mouse
# move (e.g. 'wofi', 'bemenu')
    layers_hog_keyboard_focus = true

# If 'true', will animate manual window resizes/moves
    animate_manual_resizes = true

# If 'true', will animate windows being dragged by mouse, note that this can
# cause weird behavior on some curves
    animate_mouse_windowdragging = false

# If 'true', the config will not reload automatically on save, and instead needs
# to be reloaded with 'hyprctl reload'. Might save on battery
    disable_autoreload = false

# Enable window swallowing
    enable_swallow = false

# The 'class' regex to be used for windows that should be swallowed (usually, a
# terminal)
#    swallow_regex =

# The 'title' regex to be used for windows that should not be swallowed by the
# windows specified in 'swallow_regex' (e.g. 'wev'). The regex is matched
# against the parent (e.g. 'Kitty') window's title on the assumption that it
# changes to whatever process it's running
#    swallow_exception_regex =

# Whether Hyprland should focus an app that requests to be focused (an
# 'activate' request)
    focus_on_activate = false

# Whether mouse moving into different monitor should focus it
    mouse_move_focuses_monitor = true

# Buggy! Starts rendering before your monitor displays a frame in order to lower
# latency
    render_ahead_of_time = false

# How many ms of safezone to add to rendering ahead of time. Recommended '1'-'2'
    render_ahead_safezone = 1

# If 'true', will allow you to restart a lockscreen app in case it crashes (red
# screen of death)
    allow_session_lock_restore = true

# Change the background color (requires enabled 'disable_hyprland_logo')
    background_color = 0x111111

# Close the special workspace if the last window is removed
    close_special_on_empty = true

# If there is a fullscreen or maximized window, decide whether a new tiled
# window opened should replace it, stay behind or disable the fullscreen/
# maximized state. '0' - behind, '1' - takes over, '2' - unfullscreen/unmaximize
# ('0'/'1'/'2')
    new_window_takes_over_fullscreen = 0

# If enabled, windows will open on the workspace they were invoked on. '0' -
# disabled, '1' - single-shot, '2' - persistent (all children too)
    initial_workspace_tracking = 1

# Whether to enable primary selection
    middle_click_paste = true
}

binds {
# If disabled, will not pass the mouse events to apps/dragging windows around if
# a keybind has been triggered
    pass_mouse_when_bound = false

# In ms, how many ms to wait after a scroll event to allow passing another one
# for the binds
    scroll_event_delay = 300

# If enabled, an attempt to switch to the currently focused workspace will
# instead switch to the previous workspace. Akin to i3's 'auto_back_and_forth'
    workspace_back_and_forth = false

# If enabled, workspaces don't forget their previous workspace, so cycles can be
# created by switching to the first workspace in a sequence, then endlessly
# going to the previous workspace
    allow_workspace_cycles = false

# Whether switching workspaces should center the cursor on the workspace ('0')
# or on the last active window for that workspace ('1')
    workspace_center_on = 1

# Sets the preferred focus finding method when using 'focuswindow'/'movewindow'/
# etc. with a direction. '0' - history (recent have priority), '1' - length
# (longer shared edges have priority)
    focus_preferred_method = 0

# If enabled, dispatchers like 'moveintogroup', 'moveoutofgroup' and
# 'movewindoworgroup' will ignore lock per group
    ignore_group_lock = false

# If enabled, when on a fullscreen window, 'movefocus' will cycle fullscreen, if
# not, it will move focus in a direction
    movefocus_cycles_fullscreen = true

# If enabled, apps that request keybinds to be disabled (e.g. VMs) will not be
# able to do so
    disable_keybind_grabbing = false

# If enabled, moving a window or focus over the edge of a monitor with a
# direction will move it to the next monitor in that direction
    window_direction_monitor_fallback = true

}

xwayland {
# Uses the nearest neighbor filtering for XWayland apps, making them pixelated
# rather than blurry
    use_nearest_neighbor = true

# Forces a scale of '1' on XWayland windows on scaled displays
    force_zero_scaling = false
}

opengl {
# Reduces flickering on nvidia at the cost of possible frame drops on lower-end
# GPUs. On non-nvidia, this is ignored
    nvidia_anti_flicker = true

# Forces introspection at all times. Introspection os aimed at reducing GPU
# usage in certain cases, but might cause graphical glitches on nvidia. '0' -
# nothing, '1' - force always on, '2' - force always on if nvidia
    force_introspection = 2
}

cursor {
# Disables hardware cursors
    no_hardware_cursors = false

# Disables scheduling new frames on cursor movement for fullscreen apps with VRR
# enabled to avoid framerate spikes (requires 'no_hardware_cursors = true')
    no_break_fs_vrr = false

# Minimum refresh rate for cursor movement when 'no_break_fs_vrr' is active. Set
# to minimum supported refresh rate or higher
    min_refresh_rate = 60

# The padding, in logical px, between screen edges and the cursor
    hotspot_padding = 1

# In seconds, after how many seconds of cursor's inactivity to hide it. '0' for
# never
    inactive_timeout = 0

# If true, will not warp the cursor in many cases (focusing, keybinds etc.)
    no_warps = false

# When a window is refocused, the cursor returns to its last position relative
# to that window, rather than to the centre
    persistent_warps = true

# If true, move the cursor to the last focused window after changing the
# workspace
    warp_on_change_workspace = true

# The name of a default monitor for the cursor to be set to on startup
#    default_monitor =

# The factor to zoom by around the cursor. Like a magnifiying glass (min: '1.0)
    zoom_factor = 1.0

# Whether the zoom should follow the cursor rigidly (cursor is always centered
# if it can be) ir loosely
    zoom_rigid = false

# Whether to enable hyprcursor support
    enable_hyprcursor = true

# Hides the cursor when you press any key until the mouse is moved
    hide_on_key_press = false

# Hides the cursor when the last input was a touch input until a mouse input is
# done
    hide_on_touch = true
}

debug {
# Print the debug performance overlay. Disable VFR for accurate results
    overlay = false

# Flash areas updated with damage tracking
    damage_blink = false

# Disable logging to a file
    disable_logs = true

# Disables time logging
    disable_time = true

# Redraw only the needed bits of the display. Do not change!
    damage_tracking = 2

# Enables logging to 'stdout'
    enable_stdout_logs = false

# Set to '1' and then back to '0' to crash Hyprland
    manual_crash = 0

# If 'true', do not display config file parsing errors
    suppress_errors = false

# Sets the timeout in s for watchdog to abort processing of a signal of the main
# thread. '0' to disable
    watchdog_timeout = 5

# Disables verification of the scale factors. Will result in pixel alignment and
# rounding errors
    disable_scale_checks = false

# Limits the number of displayed config file parsing errors
    error_limit = 5

# Sets the position of the error bar. Top - '0', bottom - '1'
    error_position = 0

# Enables colors in the 'stdout' logs
    colored_stdout_logs = true
}

dwindle {
# Enable pseudotiling. Pseudotiled windows retaing their floating size when
# tiled
    pseudotile = true

# '0' -> split follows mouse, '1' -> always split to the left (new = left or
# top), '2' -> always split to the right (new = right or bottom)
    force_split = 2

# If enabled, the split (side/top) will not change regardless of what happens to
# the container
    preserve_split = true

# If enabled, allows a more precise control over the window split direction
# based on the cursor's position. The window is conceptually divided into four
# triangles, and cursor's triangle determines the split direction. This feature
# also turns on 'preserve_split'
    smart_split = false

# If enabled, resizing direction will be determined by the mouse's position on
# the window (nearest to which corner). Else, it is based on the window's tiling
# position
    smart_resizing = true

# If enabled, makes the preselect direction persist until either this mode is
# turned off, another direction is specified or a non-direction is specified
# (anything other than 'l', 'r', 'u'/'t', 'd'/'b')
    permanent_direction_override = false

# Specifies the scale factor of windows on the special workspace ('0'-'1')
    special_scale_factor = 1.0

# Specifies the auto-split width multiplier
    split_width_multiplier = 1.0

# Whether to prefer the active window or the mouse position for splits
    use_active_for_splits = true

# The default split ratio on window open. '1' means even 50/50 split ('0.1'-
# '1.9)
    default_split_ratio = 1.0
}

master {
# Enable adding additional master windows in a horizontal split style
    allow_small_split = false

# The scale of the special workspace windows ('0.0'-'1.0')
    special_scale_factor = 1.0

# The size as a percentage of the master window, for example 'mfact = 0.70'
# would mean 70% of the screen will be the master window, and 30% the slave
# ('0.0'-'1.0')
    mfact = 0.55

# 'master': new window becomes master; 'slave': new windows are added to slave
# stack; 'inherit': inherit from focused window
    new_status = master

# Whether a newly open window should be on the top of the stack
    new_on_top = false

# 'before', 'after': place new window relative to the focused window; 'none':
# place new window according to the value of 'new_on_top'
    new_on_active = none

# Default placement of the master area, can be 'left', 'right', 'top', 'bottom'
# or 'center'
    orientation = left

# Inherit fullscreen status when cycling/swapping to another window (e.g.
# monocle layout)
    inherit_fullscreen = true

# When using 'orientation = center', keep the master window centered, even when
# it is the only window in the workspace
    always_center_master = false

# If enabled, resizing direction will be determined by the mouse's position on
# the window (nearest to which corner). Else, it is based on the window's tiling
# position
    smart_resizing = true

# When enabled, dragging and dropping windows will put them at the cursor
# position. Otherwise, when dropped at the stack side, they will got to the top/
# bottom of the stack depending on 'new_on_top'
    drop_at_cursor = true
}

# Window rules V1
    # Syntax: 'windowrule = RULE,WINDOW', where RULE is a rule and 'WINDOW' is
    # either a plain regex (for matching a window class) or 'title:' followed by
    # a regex (for matching a window's title)

# Rules
    # Static rules
        # float
        # tile
        # fullscreen
        # maximize
        # fullscreenstate [internal] [client]
        # move [x] [y]
        # size [x] [y]
        # center ([opt])
        # pseudo
        # monitor [id]
        # workspace [w]
        # noinitialfocus
        # pin
        # unset
        # nomaxsize
        # stayfocused
        # group [options]
            # options
                # set [always]
                # new
                # lock [always]
                # barred
                # deny
                # invade
                # override
                # unset
        # suppressevent [types...]
    # Dynamic rules
        # animation [style] ([opt])
        # bordercolor [c]
        # idleinhibit [mode]
        # opacity [a]
        # tag [name]
        # maxsize [x] [y]
        # minsize [x] [y]
    # the following rules can also be set with 'hyprctl setprop'
        # bordersize [int]
        # rounding [int]
        # allowsinput [on]
        # dimaround [on]
        # decorate [on]
        # focusonactivate [on]
        # keepaspectratio [on]
        # nearestneighbor [on]
        # noanim [on]
        # noblur [on]
        # noborder [on]
        # nodim [on]
        # nofocus [on]
        # nomaxsize [on]
        # norounding [on]
        # noshadow [on]
        # noshortcutsinhibit [on]
        # opaque [on]
        # forcergbx [on]
        # syncfullscreen [on]
        # immediate [on]
        # xray [on]
        # renderunfocused

# Window rules V2 support matching multiple variables
# Window rules V2 supported fields:
    # class:[regex]
        # Description
            # Windows with 'class' matching 'regex'
    # title:[regex]
        # Description
            # Windows with 'title' matching 'regex'
    # initialClass:[regex]
        # Description
            # Windows with 'initialClass' matching 'regex'
    # initialTitle:[regex]
        # Description
            # Windows with 'initialTitle' matching 'regex'
    # tag:[name]
        # Description
            # Windows with matching 'tag'
    # xwayland:[0/1]
        # Description
            # Xwayland windows
    # floating:[0/1]
        # Description
            # Floating windows
    # fullscreen:[0/1]
        # Description
            # Fullscreen windows
    # pinned:[0/1]
        # Description
            # Pinned windows
    # focus:[0/1]
        # Description
            # Currently focused windows
    # fullscreenstate:[internal][client]
        # Description
            # Windows with matching 'fullscreenstate'. 'internal' and 'client'
            # can be '*' - any, '0' - none, '1' - maximize, '2' - fullscreen,
            # '3' - maximize and fullscreen
    # workspace:[w]
        # Description
            # Windows on matching workspace. 'w' can be id or 'name:string'
    # onworkspace:[w]
        # Description
            # Windows on matching workspace. 'w' can be id, 'name:string' or
            # 'workspace selector'
windowrulev2 = suppressevent maximize, class:.*

# Tags
# To check window tags use 'hyprctl clients'

# Layer rules
# Set with 'layerrule = <rule>, <namespace>/<address>'
    # unset
    # noanim
    # blur
    # blurpopups
    # ignorealpha [a]
    # ignorezero
    # dimaround
    # xray [on]
    # animation [style]
    # order [n]
layerrule = blur,class:^([Hh]yprlock)$

# Workspaces
    # ID: e.g. '1', '2', '3'...
    # Relative ID: e.g. '+1', '-3', '+100'...
    # Workspace on monitor, relative with '+' or '-', absolute with '~': e.g.
    # 'm+1', 'm-2', 'm~3'...
    # Workspace on monitor including empty workspaces, relative with '+' or '-',
    # absolute with '~': e.g. 'r+1', 'r~3'...
    # Open workspace, relative with '+' or '-', absolute with '~': e.g. 'e+1',
    # 'e-10', 'e~2'...
    # Name: e.g. 'name:Web', 'name:Better anime'...
    # Previous workspace: 'previous' or 'previous_per_monitor'
    # First available empty workspace: 'empty', suffix with 'm' to only search
    # on monitor and/or 'n' to make it the next available empty workspace: e.g.
    # 'emptynm'
    # Special workspace: 'special' or 'special:name' for named special
    # workspaces

workspace = 1, defaultName:α
workspace = 2, defaultName:β
workspace = 3, defaultName:γ
workspace = 4, defaultName:δ
workspace = 5, defaultName:ε
workspace = 6, defaultName:ζ
workspace = 7, defaultName:η
workspace = 8, defaultName:θ
workspace = 9, defaultName:ι
workspace = 10, defaultName:κ
workspace = special:Scratchpad

# Keybindings

# Basic
    # 'bind = MODS, key, dispatcher, params'
# Uncommon syms/binding with a keycode
    # 'bind = MODS, code:<KEYCODE>, dispatcher, params'
# Misc
    # Unbind
        # 'unbind = MODS, key'
    # Mouse buttons
        # 'bind = MODS, mouse:<KEYCODE>, dispatcher, params'
    # Only modkeys
        # 'bindr = MODS, key, dispatcher, params'
    # Keysym combos
        # 'binds = MODS, key&key, dispatcher, params'
        # 'binds = MODS&MODS, key&key, dispatcher, params'
    # Mouse wheel
        # 'bind = MODS, mouse_up/mouse_down/mouse_left/mouse_right, dispatcher,
        # params'
    # Switches
        # 'bind = , switch:(on/off):[switch_name], dispatcher, params'
        # Switches can be viewed in 'hyprctl devices'
# Bind flags
    # Format: 'bind[flags] = ...'
        # 'l' -> locked, will also work when an input inhibitor (e.g. a
        # lockscreen) is active
        # 'r' -> release, will trigger on release of a key
        # 'e' -> repeat, will repeat when held
        # 'n' -> non-consuming, key/mouse events will be passed to the active
        # window in addition to triggering the dispatcher
        # 'm' -> mouse
        # 't' -> transparent, cannot be shadowed by other binds
        # 'i' -> ignore mods, will ignore modifiers
        # 's' -> separate, will arbitrarily combine keys between each mod/key
        # 'd' -> has description
        # 'p' -> bypasses the app's request to inhibit keybinds
# Mouse binds
    # Mouse binds are binds that rely on mouse movement. They will have one less
    # arg, and may look like this: 'bindm = ALT, mouse:272, movewindow'
    # Common mouse button's codes are '272' for LMB and '273' for RMB. For more
    # check 'wev'
    # Available mouse binds:
        # movewindow
            # Description
                # Moves the active window
        # resizewindow
            # Description
                # Resizes the active window
            # Parameters
                # '1' - resize and keep window aspect ratio, '2' - resize and
                # ignore 'keepaspectratio' window rule/prop, none or anything
                # else for normal resize
# Binding mods
    # Mod alone also can be binded:
        # 'bindr = ALT, Alt_L, exec, amongus'
# Global keybinds
    # Classic
        # Example for OBS' start/stop recording shortcut:
            # 'bind = SUPER, F10, pass, ^(com\.obsproject\.Studio)$
        # 'pass' will pass the 'PRESS' and 'RELEASE' events by itself, no need
        # for a 'bindr'. This also means that push-to-talk will work flwalessly
        # with one pass, e.g.:
            # 'bind = , mouse:276, pass, ^(TeamSpeak 3)$
        # will pass MOUSE5 to TeamSpeak3.
            # 'bind = SUPER, F10, sendshortcut, SUPER, F4,
            # ^(com\.obsproject\.Studio)$'
        # will send SUPER+F4 to OBS if you press SUPER+F10
    # DBus Global Shortcuts
        # Some applications may already support the GlobalShortcuts portal in
        # xdg-desktop-portal. If that's the case, it's recommended to use this
        # method instead of 'pass'.
        # Open your desired app and run 'hyprctl globalshortcuts'. This will
        # give you a list of currently registered shortcuts with descriptions.
        # Choose whichever you like, e.g. 'coolApp:myToggle', and bind it to
        # whatever you want with the 'global' dispatcher:
            # 'bind = SUPERSHIFT, A, global, coolApp:myToggle
# Submaps
    # Keybind submaps, aka modes or groups, allow to activate a separate set of
    # keybindings.
    # If you get stuck inside a keymap, you can use 'hyprctl dispatch submap
    # reset' to go back.
        # bind = ..., submap, <submap_name>
        # submap = <submap_name>
        # ...
        # bind = ..., submap, reset
        # submap = reset
# Catch-all
    # Binding with 'catchall' keyword activates no matter which key is pressed.
    # This can be used to prevent any keys from passing to your active
    # application while in a submap or to exit it immediately when any unknown
    # key is pressed
        # 'bind = , catchall, submap, reset

$mainMod = SUPER
$secondaryMod = ALT

# Dwindle bind dispatchers
    # pseudo
        # Description
            # Toggles the given window's pseudo mode
        # Parameters
            # Left empty/'active' for current, or 'window' for a specific window

# Dwindle layout messages
    # 'layoutmsg' parameters:
        # togglesplit
            # Description
                # Toggles the split (top/side) of the current window.
                # 'preserve_split' must be enabled for toggling to work
        # swapsplit
            # Description
                # Swaps the two halves of the split of the current window
        # preselect
            # Description
                # A one-time override for the split direction (valid for the
                # next window to be opened, only works on tiled windows)
            # Parameters
                # <direction>
        # movetoroot
            # Description
                # Moves the selected window (active window if unspecified) to
                # the root of its workspace tree. The default behavior maximizes
                # the window in its current subtree. If 'unstable' is provided
                # as the second argument, the window will be swapped with the
                # other subtree instead. It is not possible to only provide the
                # second argument, but 'movetoroot active unstable' will achieve
                # the same result
            # Parameters
                # <[window, [string]]>

# Master bind dispatchers
    # 'layoutmsg' commands
        # swapwithmaster
            # Description
                # Swaps the current window with master. If the current window is
                # the master, swaps it with the first child
            # Parameters
                # Either 'master' (new focus is the new master window), 'child'
                # (new focus is the new child) or 'auto' (which is default,
                # keeps the focus of the previously focused window)
        # focusmaster
            # Description
                # Focuses the master window
            # Parameters
                # Either 'master' (focus stays at master, even if it was
                # selected before) or 'auto' (which is the default, if the
                # current window is the master, focuses the first child)
        # cyclenext
            # Description
                # Focuses the next window respecting the layout
        # cycleprev
            # Description
                # Focuses the previous window respecting the layout
        # swapnext
            # Description
                # Swaps the focused window with the next window respecting the
                # layout
        # swapprev
            # Description
                # Swaps the focused window with the previous window respecting
                # the layout
        # addmaster
            # Description
                # Adds a master to the master side. That will be the active
                # window, if it's not a master, or the first non-master window
        # removemaster
            # Description
                # Removes a master from the master side. That will be the active
                # window, if it's a master, or the last master window
        # orientationleft
            # Description
                # Sets the orientation for the current workspace to left (master
                # area left, slave windows to the right, vertically stacked)
        # orientationright
            # Description
                # Sets the orientation for the current workspace to right
                # (master area right, slave windows to the left, vertically
                # stacked)
        # orientationtop
            # Description
                # Sets the orientation for the current workspace to top (master
                # area top, slave windows to the bottom, horizontally stacked)
        # orientationbottom
            # Description
                # Sets the orientation for the current workspace to bottom
                # (master area bottom, slave windows to the top, horizontally
                # stacked)
        # orientationcenter
            # Description
                # Sets the orientation for the current workspace to center
                # (master area center, slave windows alternate to the left and
                # right, vertically stacked)
        # orientationnext
            # Description
                # Cycle to the next orientation for the current workspace 
                # (clockwise)
        # orientationprev
            # Description
                # Cycle to the previous orientation for the current workspace
                # (counter-clockwise)
        # orientationcycle
            # Description
                # Cycle to the next orientation from the provided list, for the
                # current workspace
            # Parameters
                # Allowed values: 'left', 'top', 'right', 'bottom', or 'center'.
                # The values have to be separated by a space. If left empty, it
                # will work like 'orientationnext'
        # mfact
            # Description
                # Change mfact, the master split ratio
            # Parameters
                # The new split ratio, a relative float delta (e.g. '-0.2' or
                # '+0.2') or 'exact' followed by the exact float value between
                # '0.0' and '1.0'
        # rollnext
            # Description
                # Rotate the next window in stack to be the master, while
                # keeping the focus on master
        # rollprev
            # Description
                # Rotate the previous window in stack to be the master, while
                # keeping the focus on master

# Dispatchers
    # exec
        # Description
            # Executes a shell command
        # Parameters
            # <command> (support rules)
    # execr
        # Description
            # Executes a raw shell command (does not support rules)
        # Parameters
            # <command>
    # pass
        # Description
            # Passes the key (with mods) to a specified window. Can be used as a
            # workaround to global keybindings not working on Wayland
        # Parameters
            # <window>
    # sendshortcut
        # Description
            # Sends specified keys (with mods) to an optionally specified
            # window. Can be used like 'pass'
        # Parameters
            # <mod, key[, window]>
    # killactive
        # Description
            # Closes (not kills) the active window
    # closewindow
        # Description
            # Closes a specified window
        # Parameters
            # <window>
    # workspace
        # Description
            # Changes the workspace
        # Parameters
            # <workspace>
    # movetoworkspace
        # Description
            # Moves the focused window to a workspace
        # Parameters
            # <workspace> or <workspace,window> for a specific window
    # movetoworkspacesilent
        # Description
            # Same as above, but doesn't switch to the workspace
        # Parameters
            # <workspace> or <workspace,window> for a specific window
    # togglefloating
        # Description
            # Toggles the current window's floating state
        # Parameters
            # empty/<active> for current, <window> for a specific window
    # setfloating
        # Description
            # Sets the current window's floating state to 'true'
        # Parameters
            # empty/<active> for current, <window> for a specific window
    # settiled
        # Description
            # Sets the current window's floating state to 'false'
        # Parameters
            # empty/<active> for current, <window> for a specific window
    # fullscreen
        # Description
            # Toggles the focused window's fullscreen mode
        # Parameters
            # '0' - fullscreen, '1' - maximize (keeps gaps and bar(s))
    # fullscreenstate
        # Description
            # Sets the focused window's fullscreen mode and the one sent to the
            # client
        # Parameters
            # <internal client>, where internal and client can be '-1' -
            # current, '0' - none, '1' - maximize, '2' - fullscreen, '3' -
            # maximize and fullscreen
    # dpms
        # Description
            # Sets all monitors' DPMS status. Do not use with a keybind directly
        # Parameters
            # 'on', 'off' or 'toggle'. For specific monitor add monitor name
            # after a space
    # pin
        # Description
            # Pins a window (floating only)
        # Parameters
            # empty/'active' for current or 'window' for a specific window
    # movefocus
        # Description
            # Moves the focus in a direction
        # Parameters
            # <direction>
    # movewindow
        # Description
            # Moves the active window in a direction or to a monitor. For
            # floating windows, moves the window to the screen edge in that
            # direction
        # Parameters
            # <direction> or 'mon:' and a <monitor>, optionally followed by a
            # space and 'silent' to prevent the focus from moving with the
            # window
    # swapwindow
        # Description
            # Swaps the active window with another window in the given direction
        # Parameters
            # <direction>
    # centerwindow
        # Description
            # Center the active window (floating only)
        # Parameters
            # none (for monitor center) or '1' (to respect monitor reserved
            # area)
    # resizeactive
        # Description
            # Resizes the active window
        # Parameters
            # <resizeparams>
    # moveactive
        # Description
            # Moves the active window
        # Parameters
            # <resizeparams>
    # resizewindowpixel
        # Description
            # Resizes a selected window
        # Parameters
            # <resizeparams,window>, e.g. '100 100,^(kitty)$'
    # movewindowpixel
        # Description
            # Moves a selected window
        # Parameters
            # <resizeparams,window>
    # cyclenext
        # Description
            # Focuses the next window on a workspace
        # Parameters
            # none (for next) or 'prev' (for previous) additionally 'tiled' for
            # only tiled, 'floating' for only floating. 'prev tiled' is ok
    # swapnext
        # Description
            # Swaps the focused window with the next window on a workspace
        # Parameters
            # none (for next) or 'prev' (for previous)
    # tagwindow
        # Description
            # Apply tag to current or the first window matching
        # Parameters
            # <tag [window]>, e.g. '+code ^(foot)$', 'music'
    # focuswindow
        # Description
            # Focuses the first window matching
        # Parameters
            # <window>
    # focusmonitor
        # Description
            # Focuses a monitor
        # Parameters
            # <monitor>
    # splitratio
        # Description
            # Changes the split ratio
        # Parameters
            # <floatvalue>
    # movecursortocorner
        # Description
            # Moves the cursor to the corner of the active window
        # Parameters
            # <direction>, '0'-'3', bottom left - '0', bottom right - '1', top
            # right - '2', top left - '3'
    # movecursor
        # Description
            # Moves cursor to a specified position
        # Parameters
            # 'x y'
    # renameworkspace
        # Description
            # Rename a workspace
        # Parameters
            # <id name>, e.g. '2 work'
    # exit
        # Description
            # Exits the compositor with no questions asked
    # forcerendererreload
        # Description
            # Forces the renderer to reload all resources and outputs
    # movecurrentworkspacetomonitor
        # Description
            # Moves the active workspace to a monitor
        # Parameters
            # <monitor>
    # focusworkspaceoncurrentmonitor
        # Description
            # Focuses the requested workspace on the current monitor, swapping
            # the current workspace to a different monitor if necessary. If you
            # want XMonad/Qtile-style workspace switching, replace 'workspace'
            # in config with this
        # Parameters
            # <workspace>
    # moveworkspacetomonitor
        # Description
            # Moves a workspace to a monitor
        # Parameters
            # <workspace monitor>
    # swapactiveworkspaces
        # Description
            # Swaps the active workspaces between two monitors
        # Parameters
            # <monitor monitor>
    # bringactivetotop
        # Description
            # Deprecated in favor of alterzorder! Brings the current window to
            # the top of the stack
    # alterzorder
        # Description
            # Modify the window stack order of the active or specified window
            # (this cannot be used to move a floating window behind a tiled one)
        # Parameters
            # <zheight[, window]>
    # togglespecialworkspace
        # Description
            # Toggles a special workspace on/off
        # Parameters
            # none (for the first) or name for named special workspace
    # focusurgentorlast
        # Description
            # Focuses the urgent window or the last window
    # togglegroup
        # Description
            # Toggles the current active window into a group
    # changegroupactive
        # Description
            # Switches to the next window in a group
        # Parameters
            # 'b' - back, 'f' - forward or index start at '1'
    # focuscurrentorlast
        # Description
            # Switch focus from current to previously focused window
    # lockgroups
        # Description
            # Locks the groups (all groups will not accept new windows)
        # Parameters
            # 'lock' for locking, 'unlock' for unlocking, 'toggle' to toggle
    # lockactivegroup
        # Description
            # Lock the focused group (current group will not accept new windows
            # or be moved to other groups)
        # Parameters
            # 'lock' for locking, 'unlock' for unlocking, 'toggle' to toggle
    # moveintogroup
        # Description
            # Moves the active window into a group in a specified direction.
            # No-op if there is no group in the specified direction
        # Parameters
            # <direction>
    # moveoutofgroup
        # Description
            # Moves the active window out of a group. No-op if not in a group
        # Parameters
            # empty/'active' for current or <window> for a specific window
    # movewindoworgroup
        # Description
            # Behaves as 'moveintogroup' if there is a group in the given
            # direction. Behaves as 'moveoutofgroup' if there is no group in the
            # given direction relative to the active group. Otherwise behaves
            # like 'movewindow'
        # Parameters
            # <direction>
    # movegroupwindow
        # Description
            # Swaps the active window with the next or previous in a group
        # Parameters
            # 'b' for back, anything else for forward
    # denywindowfromgroup
        # Description
            # Prohibit the active window from becoming or being inserted into
            # group
        # Parameters
            # 'on', 'off' or 'toggle'
    # setignoregrouplock
        # Description
            # Temporarily enable or disable 'binds:ignore_group_lock'
        # Parameters
            # 'on', 'off' or 'toggle'
    # global
        # Description
            # Executes a Global Shortcut using the GlobalShortcut portal
        # Parameters
            # <name>
    # submap
        # Description
            # Change the current mapping group
        # Parameters
            # <name>
    # event
        # Description
            # Emits a cutom event to socket2 in the form of 'custom>>yourdata'
        # Parameters
            # The data to send

# Parameter explanation
    # window
        # Description
            # A window. Any of the following: class regex (by default,
            # optionally 'class:'), 'initialclass:' initial class regex,
            # 'title:' title regex, 'initialtitle' initial title regex, 'pid:'
            # the pid, 'address:' the address, 'activewindow' an active window,
            # 'floating' the first floating window on the current workspace,
            # 'tiled' the first tiled window on the current workspace
    # workspace
    # direction
        # Description
            # 'l', 'r', 'u', 'd' for left, right, up and down respectively
    # monitor
        # Description
            # One of: direction, ID, name, 'current', relative (e.g. '+1' or
            # '-1')
    # resizeparams
        # Description
            # Relative pixel delta vec2 (e.g. '10 -10'), optionally a percentage
            # of the window size (e.g. '20 25%') or 'exact' followed by an exact
            # vec2 (e.g. 'exact 1280 720), optionally a percentage of the screen
            # size (e.g. 'exact 50% 50%)
    # floatvalue
        # Description
            # A relative float delta (e.g. '-0.2' or '+0.2') or 'exact' followed
            # by the exact float value (e.g. 'exact 0.5')
    # zheight
        # Description
            # 'top' or 'bottom'
    # mod
        # Description
            # 'SUPER'< 'SUPER_ALT' etc,
    # key
        # Description
            # 'g', 'code:42', '42' or mouse clicks ('mouse:272')

bindd = $mainMod, 1, Workspace "α", workspace, 1
bindd = $mainMod, KP_1, Workspace "α", workspace, 1
bindd = $mainMod, KP_END, Workspace "α", workspace, 1
bindd = $mainMod, 2, Workspace "β", workspace, 2
bindd = $mainMod, KP_2, Workspace "β", workspace, 2
bindd = $mainMod, KP_DOWN, Workspace "β", workspace, 2
bindd = $mainMod, 3, Workspace "γ", workspace, 3
bindd = $mainMod, KP_3, Workspace "γ", workspace, 3
bindd = $mainMod, KP_NEXT, Workspace "γ", workspace, 3
bindd = $mainMod, 4, Workspace "δ", workspace, 4
bindd = $mainMod, KP_4, Workspace "δ", workspace, 4
bindd = $mainMod, KP_LEFT, Workspace "δ", workspace, 4
bindd = $mainMod, 5, Workspace "ε", workspace, 5
bindd = $mainMod, KP_5, Workspace "ε", workspace, 5
bindd = $mainMod, KP_BEGIN, Workspace "ε", workspace, 5
bindd = $mainMod, 6, Workspace "ζ", workspace, 6
bindd = $mainMod, KP_6, Workspace "ζ", workspace, 6
bindd = $mainMod, KP_RIGHT, Workspace "ζ", workspace, 6
bindd = $mainMod, 7, Workspace "η", workspace, 7
bindd = $mainMod, KP_7, Workspace "η", workspace, 7
bindd = $mainMod, KP_HOME, Workspace "η", workspace, 7
bindd = $mainMod, 8, Workspace "θ", workspace, 8
bindd = $mainMod, KP_8, Workspace "θ", workspace, 8
bindd = $mainMod, KP_UP, Workspace "θ", workspace, 8
bindd = $mainMod, 9, Workspace "ι", workspace, 9
bindd = $mainMod, KP_9, Workspace "ι", workspace, 9
bindd = $mainMod, KP_PRIOR, Workspace "ι", workspace, 9
bindd = $mainMod, 0, Workspace "κ", workspace, 10
bindd = $mainMod, KP_0, Workspace "κ", workspace, 10
bindd = $mainMod, KP_INSERT, Workspace "κ", workspace, 10

bindde = $mainMod, Tab, Open next workspace, workspace, e+1
bindde = $mainMod Shift, Tab, Open previous workspace, workspace, e-1

bindd = $mainMod SHIFT, 1, Move to Workspace "α", movetoworkspacesilent, 1
bindd = $mainMod SHIFT, KP_1, Move to workspace "α", movetoworkspacesilent, 1
bindd = $mainMod SHIFT, KP_END, Move to workspace "α", movetoworkspacesilent, 1
bindd = $mainMod SHIFT, 2, Move to Workspace "β", movetoworkspacesilent, 2
bindd = $mainMod SHIFT, KP_2, Move to workspace "β", movetoworkspacesilent, 2
bindd = $mainMod SHIFT, KP_DOWN, Move to workspace "β", movetoworkspacesilent, 2
bindd = $mainMod SHIFT, 3, Move to Workspace "γ", movetoworkspacesilent, 3
bindd = $mainMod SHIFT, KP_3, Move to workspace "γ", movetoworkspacesilent, 3
bindd = $mainMod SHIFT, KP_NEXT, Move to workspace "γ", movetoworkspacesilent, 3
bindd = $mainMod SHIFT, 4, Move to Workspace "δ", movetoworkspacesilent, 4
bindd = $mainMod SHIFT, KP_4, Move to workspace "δ", movetoworkspacesilent, 4
bindd = $mainMod SHIFT, KP_LEFT, Move to workspace "δ", movetoworkspacesilent, 4
bindd = $mainMod SHIFT, 5, Move to Workspace "ε", movetoworkspacesilent, 5
bindd = $mainMod SHIFT, KP_5, Move to workspace "ε", movetoworkspacesilent, 5
bindd = $mainMod SHIFT, KP_BEGIN, Move to workspace "ε", movetoworkspacesilent, 5
bindd = $mainMod SHIFT, 6, Move to Workspace "ζ", movetoworkspacesilent, 6
bindd = $mainMod SHIFT, KP_6, Move to workspace "ζ", movetoworkspacesilent, 6
bindd = $mainMod SHIFT, KP_RIGHT, Move to workspace "ζ", movetoworkspacesilent, 6
bindd = $mainMod SHIFT, 7, Move to Workspace "η", movetoworkspacesilent, 7
bindd = $mainMod SHIFT, KP_7, Move to workspace "η", movetoworkspacesilent, 7
bindd = $mainMod SHIFT, KP_HOME, Move to workspace "η", movetoworkspacesilent, 7
bindd = $mainMod SHIFT, 8, Move to Workspace "θ", movetoworkspacesilent, 8
bindd = $mainMod SHIFT, KP_8, Move to workspace "θ", movetoworkspacesilent, 8
bindd = $mainMod SHIFT, KP_UP, Move to workspace "θ", movetoworkspacesilent, 8
bindd = $mainMod SHIFT, 9, Move to Workspace "ι", movetoworkspacesilent, 9
bindd = $mainMod SHIFT, KP_9, Move to workspace "ι", movetoworkspacesilent, 9
bindd = $mainMod SHIFT, KP_PRIOR, Move to workspace "ι", movetoworkspacesilent, 9
bindd = $mainMod SHIFT, 0, Move to Workspace "κ", movetoworkspacesilent, 10
bindd = $mainMod SHIFT, KP_0, Move to workspace "κ", movetoworkspacesilent, 10
bindd = $mainMod SHIFT, KP_INSERT, Move to workspace "κ", movetoworkspacesilent, 10
bindd = $mainMod SHIFT, DELETE, Move to Scratchpad, movetoworkspacesilent, special:Scratchpad

bindd = $mainMod, F1, Focus monitor "0", focusmonitor, 0
bindd = $mainMod, F2, Focus monitor "1", focusmonitor, 1
bindd = $mainMod, F3, Focus monitor "2", focusmonitor, 2
bindd = $mainMod, F4, Focus monitor "3", focusmonitor, 3
bindd = $mainMod, F5, Focus monitor "4", focusmonitor, 4
bindd = $mainMod, F6, Focus monitor "5", focusmonitor, 5
bindd = $mainMod, F7, Focus monitor "6", focusmonitor, 6
bindd = $mainMod, F8, Focus monitor "7", focusmonitor, 7

bindd = $mainMod SHIFT, F1, Move workspace to monitor "0", movecurrentworkspacetomonitor, 0
bindd = $mainMod SHIFT, F2, Move workspace to monitor "1", movecurrentworkspacetomonitor, 1
bindd = $mainMod SHIFT, F3, Move workspace to monitor "2", movecurrentworkspacetomonitor, 2
bindd = $mainMod SHIFT, F4, Move workspace to monitor "3", movecurrentworkspacetomonitor, 3
bindd = $mainMod SHIFT, F5, Move workspace to monitor "4", movecurrentworkspacetomonitor, 4
bindd = $mainMod SHIFT, F6, Move workspace to monitor "5", movecurrentworkspacetomonitor, 5
bindd = $mainMod SHIFT, F7, Move workspace to monitor "6", movecurrentworkspacetomonitor, 6
bindd = $mainMod SHIFT, F8, Move workspace to monitor "7", movecurrentworkspacetomonitor, 7

bindd = $mainMod SHIFT, Q, Close active window, killactive
bindd = $mainMod SHIFT, X, Shutdown "hyprland", exit
bindd = $mainMod SHIFT, F, Set fullscreen mode for active window, fullscreen, 0
bindd = $mainMod SHIFT, P, Pin active window (only floating), pin
bindd = $mainMod, HOME, Center active window, centerwindow

bindd = $mainMod SHIFT, Space, Toggle Floating mode, togglefloating
bindd = $mainMod, W, Toggle current active window into group, togglegroup

bindd = $mainMod, P, Toggle "pseudo" mode for current window (Dwindle), pseudo
bindd = $mainMod, E, Toggle the split (top or side) of the current window, togglesplit

bindd = $secondaryMod CTRL, left, Switch to the previousu window in a group, changegroupactive, b
bindd = $secondaryMod CTRL, right, Switch to the next window in a group, changegroupactive, f
bindd = $mainMod, left, Move focus to the left, movefocus, l
bindd = $mainMod, right, Move focus to the right, movefocus, r
bindd = $mainMod, up, Move focus upside, movefocus, u
bindd = $mainMod, down, Move focus downside, movefocus, d

bindd = $secondaryMod CTRL, A, Swap with previous window in a group, movegroupwindow, b
bindd = $secondaryMod CTRL, D, Swap with next window in a group, movegroupwindow, f
bindd = $mainMod SHIFT, left, Move window to the left, movewindoworgroup, l
bindd = $mainMod SHIFT, right, Move window to the right, movewindoworgroup, r
bindd = $mainMod SHIFT, up, Move window upside, movewindoworgroup, u
bindd = $mainMod SHIFT, down, Move window downside, movewindoworgroup, d

bindde = $mainMod SHIFT, right, Move active window to the right by 16 px, moveactive, 16 0
bindde = $mainMod SHIFT, left, Move active window to the left by 16 px, moveactive, -16 0
bindde = $mainMod SHIFT, up, Move active window upside by 16 px, moveactive, 0 -16
bindde = $mainMod SHIFT, down, Move active window downside by 16 px, moveactive, 0 16

bindde = $secondaryMod, TAB, Focus on the next window on a Workspace, cyclenext
bindd = $mainMod, DELETE, Toggle Scratchpad, togglespecialworkspace, Scratchpad

bindd = $mainMod SHIFT, R, Enter "Resize" mode, submap, resize

submap = resize

bindde = , right, Stretch by 16 px horizontally, resizeactive, 16 0
bindde = , left, Shrink by 16 px horizontally, resizeactive, -16 0
bindde = , up, Shink by 16 px vertically, resizeactive, 0 -16
bindde = , down, Stretch by 16 px vertically, resizeactive, 0 16

bindd = , escape, Leave "Resize" mode, submap, reset

submap = reset

bindd = $mainMod SHIFT, S, Enter "Passthrough SUPER KEY" mode, submap, passthru
submap = passthru
bindd = SUPER, Escape, Leave "Passthrough SUPER KEY" mode, submap, reset
submap = reset

bindd = , XF86AudioMute, Mute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindde = , XF86AudioRaiseVolume, Increase volume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindde = , XF86AudioLowerVolume, Decrease volume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindd = , XF86AudioPrev, Previous item in playlist, exec, playerctl previous
bindd = , XF86AudioPlay, Play/Pause, exec, playerctl play-pause
bindd = , XF86AudioNext, Next item in playlist, exec, playerctl next
bindde = , XF86MonBrightnessUp, Increase brightness level, exec, brightnessctl -q s +10%
bindde = , XF86MonBrightnessDown, Decrease brightness level, exec, brightnessctl -q s 10%-

binddm = $mainMod, mouse:272, Move window with mouse, movewindow
binddm = $mainMod, mouse:273, Resize window with mouse, resizewindow
binddm = $mainMod, ALT_L, Resize window with mouse (keyboard shortcut), resizewindow

bindd = $mainMod, RETURN, Launch Terminal application, exec, $terminal
bindd = $mainMod, D, Launch tofi-drun, exec, $drun
bindd = $mainMod SHIFT, D, Launch tofi-run, exec, $run
bindd = $mainMod SHIFT, PRINT, Take a screenshot of selected region, exec, hyprshot -m region -o ~/Pictures/Screenshots
bindd = $mainMod, PRINT, Take a screenshot of entire screen, exec, hyprshot -m output -o ~/Pictures/Screenshots
bindd = $mainMod SHIFT, END, Launch wlogout, exec, wlogout
bindd = $mainMod SHIFT, L, Lock Screen, exec, loginctl lock-session
bindd = $secondaryMod CTRL, DELETE, Run MissionCenter, exec, flatpak run io.missioncenter.MissionCenter

source = ~/.config/hypr/hyprland-device.conf
